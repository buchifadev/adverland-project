{"version":3,"sources":["components/Nav/Nav.js","components/Fund.js","components/Main/Main.js","components/New/New.js","components/Dashboard/Dashboard.js","components/Footer/Footer.js","App.js","index.js"],"names":["Nav","balance","showDashboard","className","to","Fund","fundAd","adIndex","useState","amount","setAmount","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","style","display","justifyContent","alignItems","flexDirection","fontFamily","type","min","value","onChange","e","target","Footer","Main","account","ads","viewAd","map","ad","title","src","imageUrl","description","views","BigNumber","shiftedBy","toString","owner","index","New","newAd","setTitle","setDescription","image","setImage","nav","useNavigate","submitAdvert","Dashboard","contractBal","withdrawable","withdraw","AD_DEPOSIT","App","setBalance","contractObject","setContractObject","administrator","setAdministrator","setAccount","kit","setKit","setAds","setContractBal","withdrable","setWithdrable","useEffect","connectWallet","getAccountBalance","getActiveAdverts","getTotalBalance","_balance","CELO","toFixed","c","web3","eth","Contract","adverlandAbi","methods","viewOwner","call","adm","viewAccumulatedViews","wthd","dividedBy","viewContractBalance","cBal","console","log","window","celo","enable","Web3","newKitFromWeb3","getAccounts","accounts","defaultAccount","alert","name","desc","createAdvert","send","from","val","fundAdvert","allActiveAdverts","activeAds","Promise","resolve","reject","advertDetails","res","push","length","all","_ads","viewAdvert","claimFees","path","element","Spinner","animation","width","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.805e63c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = ({ balance, showDashboard }) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"blink\">\r\n        <div className=\"content-area\">\r\n          <div className=\"nav-title\">\r\n            <div>AdverLand</div>\r\n            <div className=\"title-sub\">\r\n              Adverts made more accessible on the blockchain\r\n            </div>\r\n          </div>\r\n          <div className=\"nav-links\">\r\n            <Link to=\"/new-advert\">\r\n              <div className=\"link\">New Advert</div>\r\n            </Link>\r\n            {showDashboard && (\r\n              <Link to=\"/dashboard\">\r\n                <div className=\"link\">\r\n                  Dashboard\r\n                </div>\r\n              </Link>\r\n            )}\r\n            <div className=\"link balance\">\r\n              Bal <span>{balance} Celo</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst Fund = ({ fundAd, adIndex }) => {\r\n  const [amount, setAmount] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Fund\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Fund your advert here</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"flexStart\",\r\n              flexDirection: \"column\",\r\n              fontFamily: \"Josefin Sans\",\r\n            }}\r\n          >\r\n            <div>How much would you like to fund advert with (in Celo)</div>\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={async () => fundAd(adIndex, amount)}\r\n          >\r\n            Fund\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fund;\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport Fund from \"../Fund\";\r\n\r\nconst Main = ({ account, ads, viewAd, fundAd }) => {\r\n  return (\r\n    <div className=\"ads\">\r\n      {ads?.map((ad) => (\r\n        <div className=\"rim\">\r\n          <div className=\"ad\">\r\n            <div className=\"at\">{ad.title}</div>\r\n            <img className=\"ad-img\" src={ad.imageUrl} />\r\n            <div className=\"ad-description\">{ad.description}</div>\r\n            <div className=\"ad-views\">Views: {ad.views}</div>\r\n            <div className=\"ad-bal\">\r\n              Bal: {new BigNumber(ad.balance).shiftedBy(-18).toString()} Celo\r\n            </div>\r\n            <div className=\"abt\">\r\n              {account != ad.owner && (\r\n                <button onClick={async () => viewAd(ad.index)}>View</button>\r\n              )}\r\n              {account == ad.owner && <Fund fundAd={fundAd} adIndex={ad.index} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst New = ({ newAd }) => {\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [image, setImage] = useState();\r\n  const nav = useNavigate();\r\n\r\n  const submitAdvert = async () => {\r\n    await newAd(title, description, image);\r\n    nav(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={true}>\r\n        <Modal.Header>\r\n          <Modal.Title>Add new advert to the blockchain</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div\r\n            className=\"form\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"flexStart\",\r\n              flexDirection: \"column\",\r\n              fontFamily: \"Josefin Sans\",\r\n            }}\r\n          >\r\n            <div className=\"lbl\">Advert Title</div>\r\n            <input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <div className=\"lbl\">Advert Description</div>\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <div className=\"lbl\">Advert Image</div>\r\n            <input value={image} onChange={(e) => setImage(e.target.value)} />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => nav(\"/\")}>\r\n            Exit\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => submitAdvert()}>\r\n            Submit draft\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default New;\r\n","import React from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = ({ contractBal, withdrawable, withdraw }) => {  \r\n  return (\r\n    <div className=\"dsb\">\r\n      <table>\r\n        <tr>\r\n          <td>Contract balance</td>\r\n          <td>{contractBal} Celo</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Withdrawable</td>\r\n          <td>{withdrawable} Celo</td>\r\n        </tr>\r\n        <tr>\r\n          <td></td>\r\n          <td>\r\n            <button onClick={async () => withdraw()}>Withdraw</button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>Adverland @2022</div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport Main from \"./components/Main/Main\";\nimport New from \"./components/New/New\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport BigNumber from \"bignumber.js\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport adverlandAbi from \"./contract/adverland.abi.json\";\nimport Web3 from \"web3\";\nimport Footer from \"./components/Footer/Footer\";\n\nconst ERC20_DECIMALS = 18;\nconst AD_DEPOSIT = new BigNumber(2).shiftedBy(ERC20_DECIMALS).toString();\nconst advlContractAddr = \"0x353D57926b73161475C412cd7DFac216eDf141a1\";\n\nconst App = () => {\n  const [balance, setBalance] = useState();\n  const [contractObject, setContractObject] = useState();\n  const [administrator, setAdministrator] = useState();\n  const [account, setAccount] = useState();\n  const [kit, setKit] = useState();\n  const [ads, setAds] = useState();\n  const [contractBal, setContractBal] = useState();\n  const [withdrable, setWithdrable] = useState();\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && account) {\n      getAccountBalance();\n    }\n  }, [kit, account]);\n\n  useEffect(() => {\n    if (contractObject) {\n      getActiveAdverts();\n    }\n  }, [contractObject]);\n\n  const getAccountBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(account);\n      const _balance = balance.CELO.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const c = new kit.web3.eth.Contract(adverlandAbi, advlContractAddr);\n      const adm = await c.methods.viewOwner().call();\n      setAdministrator(adm);\n      setBalance(_balance);\n      setContractObject(c);\n\n      if (account == adm) {\n        try {\n          const views = await c.methods\n            .viewAccumulatedViews()\n            .call();\n          const wthd = new BigNumber(views).dividedBy(2).toString();\n          const cBal = await c.methods\n            .viewContractBalance()\n            .call();\n          setWithdrable(wthd);\n          setContractBal(\n            new BigNumber(cBal).shiftedBy(-ERC20_DECIMALS).toString()\n          );\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // connect wallet to app\n  const connectWallet = async () => {\n    if (window.celo) {\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setAccount(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  async function newAd(name, desc, image) {\n    try {\n      await contractObject.methods\n        .createAdvert(name, desc, image)\n        .send({ from: account, value: AD_DEPOSIT });\n      alert(\"New Advert created\");\n      getActiveAdverts();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function fundAd(adIndex, val) {\n    const value = new BigNumber(val).shiftedBy(ERC20_DECIMALS).toString();\n    try {\n      await contractObject.methods\n        .fundAdvert(adIndex)\n        .send({ from: account, value: value });\n      getActiveAdverts();\n      alert(\"Your advert has been funded!\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function getActiveAdverts() {\n    try {\n      const activeAds = await contractObject.methods.allActiveAdverts().call();\n      const ads = [];\n      for (let index = 0; index < activeAds.length; index++) {\n        let ad = new Promise(async (resolve, reject) => {\n          let res = await contractObject.methods.advertDetails(index).call();\n          resolve({\n            index: index,\n            owner: res[0],\n            title: res[1],\n            description: res[2],\n            imageUrl: res[3],\n            balance: res[4],\n            views: res[5],\n          });\n        });\n        ads.push(ad);\n      }\n      const _ads = await Promise.all(ads);\n      console.log(_ads);\n      setAds(_ads);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function viewAd(adIndex) {\n    try {\n      await contractObject.methods.viewAdvert(adIndex).send({ from: account });\n      alert(\"Advert view complete!\");\n      getActiveAdverts();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function withdraw() {\n    try {\n      await contractObject.methods.claimFees().send({ from: account });\n      alert(\"Fees claimed successfully\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <>\n      {account && administrator ? (\n        <>\n          <Router>\n            <Nav balance={balance} showDashboard={account == administrator} />\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <Main\n                    account={account}\n                    ads={ads}\n                    viewAd={viewAd}\n                    fundAd={fundAd}\n                  />\n                }\n              />\n              <Route path=\"/new-advert\" element={<New newAd={newAd} />} />\n              <Route\n                path=\"/dashboard\"\n                element={\n                  <Dashboard\n                    contractBal={contractBal}\n                    withdrawable={withdrable}\n                    withdraw={withdraw}\n                  />\n                }\n              />\n            </Routes>\n            <Footer />\n          </Router>\n        </>\n      ) : (\n        <div className=\"spinx\">\n          <Spinner\n            animation=\"border\"\n            variant=\"success\"\n            style={{ width: \"100px\", height: \"100px\" }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}